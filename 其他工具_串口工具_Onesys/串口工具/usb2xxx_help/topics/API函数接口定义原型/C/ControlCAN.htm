
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>ControlCAN.h</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 13pt;
    font-weight: 500;
}
</style>


<meta http-equiv="X-UA-Compatible" content="IE=8">
<style>
html {
	overflow-y:scroll;
}

body {
	background-image: url(../../template1/back.png);
	background-repeat: repeat-x;
	background-color: #FFFFFF;
	padding: 0px;
	margin-top: 15px;
	margin-left: 15px;
	margin-bottom: 15px;
	margin-right: 15px;
}

#winchm_template_button {
	position: fixed; 
	float: right; 
	right: 15px; 
	top: 15px;
}

#winchm_template_navigation {
	padding: 0px;
	margin-top: 0px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	font-size: 8pt;
	font-family: Arial, Helvetica, sans-serif;
	color: #4A4A4A;
	text-align: left;
}

#winchm_template_title {
	padding: 0px;
	margin-top: 15px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	font-family: Tahoma, Geneva, sans-serif;
	font-size: 22px;
	font-weight: bold;
	color: #005680;
	text-align: left;
}

#winchm_template_content{
	padding: 0px;
	margin-top: 15px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	width: auto  !important;
	width: 100%;
}


#winchm_template_footer {
	padding: 0px;
	margin-top: 15px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	padding-top: 7px;
	border-width: 1px;
	border-color: #c0c0c0;
	border-top-style: solid;

	font-family: Arial, Helvetica, sans-serif;
	font-size: 10px;
	color: #575757;
	text-align: left;
}

@media print
{
#winchm_template_button{
visibility:hidden;
}
}

#winchm_template_navigation a:link	{text-decoration: none;color: 004080}
#winchm_template_navigation a:visited  {text-decoration: none; color: #004080}
#winchm_template_navigation a:active {text-decoration: none; color: #004080}
#winchm_template_navigation a:hover {text-decoration: none;color: #0000FF}

a:link	{text-decoration: underline; color:#0033cc}
a:visited  {text-decoration: underline; color: #0033cc}
a:active {text-decoration: underline; color: #0033cc }
a:hover {text-decoration: underline;color: #ff0000;}

</style>
</head>
<style type="text/css"> .hll { background-color: #ffffcc }</style>
<style type="text/css">  { background: #ffffff; }</style>
<style type="text/css"> .c { color: #177500 } </style>
<style type="text/css"> .err { color: #000000 } </style>
<style type="text/css"> .k { color: #A90D91 } </style>
<style type="text/css"> .l { color: #1C01CE } </style>
<style type="text/css"> .n { color: #000000 } </style>
<style type="text/css"> .o { color: #000000 } </style>
<style type="text/css"> .ch { color: #177500 } </style>
<style type="text/css"> .cm { color: #177500 } </style>
<style type="text/css"> .cp { color: #633820 } </style>
<style type="text/css"> .cpf { color: #177500 } </style>
<style type="text/css"> .c1 { color: #177500 } </style>
<style type="text/css"> .cs { color: #177500 } </style>
<style type="text/css"> .kc { color: #A90D91 } </style>
<style type="text/css"> .kd { color: #A90D91 } </style>
<style type="text/css"> .kn { color: #A90D91 } </style>
<style type="text/css"> .kp { color: #A90D91 } </style>
<style type="text/css"> .kr { color: #A90D91 } </style>
<style type="text/css"> .kt { color: #A90D91 } </style>
<style type="text/css"> .ld { color: #1C01CE } </style>
<style type="text/css"> .m { color: #1C01CE } </style>
<style type="text/css"> .s { color: #C41A16 } </style>
<style type="text/css"> .na { color: #836C28 } </style>
<style type="text/css"> .nb { color: #A90D91 } </style>
<style type="text/css"> .nc { color: #3F6E75 } </style>
<style type="text/css"> .no { color: #000000 } </style>
<style type="text/css"> .nd { color: #000000 } </style>
<style type="text/css"> .ni { color: #000000 } </style>
<style type="text/css"> .ne { color: #000000 } </style>
<style type="text/css"> .nf { color: #000000 } </style>
<style type="text/css"> .nl { color: #000000 } </style>
<style type="text/css"> .nn { color: #000000 } </style>
<style type="text/css"> .nx { color: #000000 } </style>
<style type="text/css"> .py { color: #000000 } </style>
<style type="text/css"> .nt { color: #000000 } </style>
<style type="text/css"> .nv { color: #000000 } </style>
<style type="text/css"> .ow { color: #000000 } </style>
<style type="text/css"> .mb { color: #1C01CE } </style>
<style type="text/css"> .mf { color: #1C01CE } </style>
<style type="text/css"> .mh { color: #1C01CE } </style>
<style type="text/css"> .mi { color: #1C01CE } </style>
<style type="text/css"> .mo { color: #1C01CE } </style>
<style type="text/css"> .sa { color: #C41A16 } </style>
<style type="text/css"> .sb { color: #C41A16 } </style>
<style type="text/css"> .sc { color: #2300CE } </style>
<style type="text/css"> .dl { color: #C41A16 } </style>
<style type="text/css"> .sd { color: #C41A16 } </style>
<style type="text/css"> .s2 { color: #C41A16 } </style>
<style type="text/css"> .se { color: #C41A16 } </style>
<style type="text/css"> .sh { color: #C41A16 } </style>
<style type="text/css"> .si { color: #C41A16 } </style>
<style type="text/css"> .sx { color: #C41A16 } </style>
<style type="text/css"> .sr { color: #C41A16 } </style>
<style type="text/css"> .s1 { color: #C41A16 } </style>
<style type="text/css"> .ss { color: #C41A16 } </style>
<style type="text/css"> .bp { color: #5B269A } </style>
<style type="text/css"> .fm { color: #000000 } </style>
<style type="text/css"> .vc { color: #000000 } </style>
<style type="text/css"> .vg { color: #000000 } </style>
<style type="text/css"> .vi { color: #000000 } </style>
<style type="text/css"> .vm { color: #000000 } </style>
<style type="text/css"> .il { color: #1C01CE } </style>
<body><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(81);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../../index.htm?page=API函数接口定义原型/C/ControlCAN.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 

<div id="winchm_template_button"><A href="can_bootloader.htm" title="Previous topic"><img id="winchm_template_prev" alt="Previous topic" src="../../template1/btn_prev_n.gif" border="0"></a><A href="i2c_sniffer.htm" title="Next topic"><img id="winchm_template_next" alt="Next topic" src="../../template1/btn_next_n.gif" border="0"></a></div>
<div id="winchm_template_navigation">Help &gt; 
<A href="../函数原型.htm">函数原型</A> &gt; </div>
<div id="winchm_template_title">ControlCAN.h</div>
<div id="winchm_template_content">
<div class="highlight"><pre><span></span><span class="cm">/**</span>
<span class="cm">  ******************************************************************************</span>
<span class="cm">  * @file    ControlCAN.h</span>
<span class="cm">  * $Author: wdluo $</span>
<span class="cm">  * $Revision: 447 $</span>
<span class="cm">  * $Date:: 2013-06-29 18:24:57 +0800 #$</span>
<span class="cm">  * @brief   Ginkgo USB-CAN适配器底层控制相关API函数定义.</span>
<span class="cm">  ******************************************************************************</span>
<span class="cm">  * @attention</span>
<span class="cm">  *</span>
<span class="cm">  *&lt;h3&gt;&lt;center&gt;&amp;copy; Copyright 2009-2012, ViewTool&lt;/center&gt;</span>
<span class="cm">  *&lt;center&gt;&lt;a href=&quot;http:\\www.toomoss.com&quot;&gt;http://www.toomoss.com&lt;/a&gt;&lt;/center&gt;</span>
<span class="cm">  *&lt;center&gt;All Rights Reserved&lt;/center&gt;&lt;/h3&gt;</span>
<span class="cm">  *</span>
<span class="cm">  ******************************************************************************</span>
<span class="cm">  */</span><span class="w"></span>
<span class="cp">#ifndef _CONTROLCAN_H_</span>
<span class="cp">#define _CONTROLCAN_H_</span>

<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdint.h&gt;</span><span class="cp"></span>
<span class="cp">#ifndef OS_UNIX</span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;Windows.h&gt;</span><span class="cp"></span>
<span class="cp">#else</span>
<span class="cp">#ifndef WINAPI</span>
<span class="cp">#define WINAPI</span>
<span class="cp">#endif</span>
<span class="cp">#endif</span>

<span class="c1">//适配器类型定义</span>
<span class="cp">#define VCI_USBCAN1     3</span>
<span class="cp">#define VCI_USBCAN2     4</span>

<span class="c1">//CAN错误码</span>
<span class="cp">#define ERR_CAN_OVERFLOW        0x0001  </span><span class="c1">//CAN 控制器内部FIFO溢出</span>
<span class="cp">#define ERR_CAN_ERRALARM        0x0002  </span><span class="c1">//CAN 控制器错误报警</span>
<span class="cp">#define ERR_CAN_PASSIVE         0x0004  </span><span class="c1">//CAN 控制器消极错误</span>
<span class="cp">#define ERR_CAN_LOSE            0x0008  </span><span class="c1">//CAN 控制器仲裁丢失</span>
<span class="cp">#define ERR_CAN_BUSERR          0x0010  </span><span class="c1">//CAN 控制器总线错误</span>
<span class="cp">#define ERR_CAN_BUSOFF          0x0020  </span><span class="c1">//CAN 控制器总线关闭</span>

<span class="c1">//通用错误码</span>
<span class="cp">#define ERR_DEVICEOPENED        0x0100  </span><span class="c1">//设备已经打开</span>
<span class="cp">#define ERR_DEVICEOPEN          0x0200  </span><span class="c1">//打开设备错误</span>
<span class="cp">#define ERR_DEVICENOTOPEN       0x0400  </span><span class="c1">//设备没有打开</span>
<span class="cp">#define ERR_BUFFEROVERFLOW      0x0800  </span><span class="c1">//缓冲区溢出</span>
<span class="cp">#define ERR_DEVICENOTEXIST      0x1000  </span><span class="c1">//此设备不存在</span>
<span class="cp">#define ERR_LOADKERNELDLL       0x2000  </span><span class="c1">//装载动态库失败</span>
<span class="cp">#define ERR_CMDFAILED           0x4000  </span><span class="c1">//执行命令失败错误码</span>
<span class="cp">#define ERR_BUFFERCREATE        0x8000  </span><span class="c1">//内存不足</span>

<span class="c1">//函数调用返回状态值</span>
<span class="cp">#define STATUS_OK   1</span>
<span class="cp">#define STATUS_ERR  0</span>

<span class="c1">//1.兼容ZLGCAN系列接口卡信息的数据类型。</span>
<span class="k">typedef</span><span class="w">  </span><span class="k">struct</span><span class="w">  </span><span class="nc">_VCI_BOARD_INFO</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">  </span><span class="n">hw_Version</span><span class="p">;</span><span class="w">         </span><span class="c1">//硬件版本号，用16 进制表示。比如0x0100 表示V1.00。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">  </span><span class="n">fw_Version</span><span class="p">;</span><span class="w">         </span><span class="c1">//固件版本号，用16 进制表示。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">  </span><span class="n">dr_Version</span><span class="p">;</span><span class="w">         </span><span class="c1">//驱动程序版本号，用16 进制表示。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">  </span><span class="n">in_Version</span><span class="p">;</span><span class="w">         </span><span class="c1">//接口库版本号，用16 进制表示。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">  </span><span class="n">irq_Num</span><span class="p">;</span><span class="w">            </span><span class="c1">//板卡所使用的中断号。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">can_Num</span><span class="p">;</span><span class="w">            </span><span class="c1">//表示有几路CAN 通道。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">str_Serial_Num</span><span class="p">[</span><span class="mi">20</span><span class="p">];</span><span class="w"> </span><span class="c1">//此板卡的序列号。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">str_hw_Type</span><span class="p">[</span><span class="mi">40</span><span class="p">];</span><span class="w">    </span><span class="c1">//硬件类型，比如“USBCAN V1.00”（注意：包括字符串结束符‘\0’）。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w">  </span><span class="n">Reserved</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="w">        </span><span class="c1">//系统保留。</span>
<span class="p">}</span><span class="w"> </span><span class="n">VCI_BOARD_INFO</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_BOARD_INFO</span><span class="p">;</span><span class="w"></span>

<span class="c1">//1.Ginkgo系列接口卡信息的数据类型。</span>
<span class="k">typedef</span><span class="w">  </span><span class="k">struct</span><span class="w">  </span><span class="nc">_VCI_BOARD_INFO_EX</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">ProductName</span><span class="p">[</span><span class="mi">32</span><span class="p">];</span><span class="w">    </span><span class="c1">//硬件名称（注意：包括字符串结束符‘\0’）</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">FirmwareVersion</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="w"> </span><span class="c1">//固件版本</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">HardwareVersion</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="w"> </span><span class="c1">//硬件版本</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">SerialNumber</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span><span class="w">   </span><span class="c1">//适配器序列号</span>
<span class="p">}</span><span class="w"> </span><span class="n">VCI_BOARD_INFO_EX</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_BOARD_INFO_EX</span><span class="p">;</span><span class="w"></span>

<span class="c1">//2.定义CAN信息帧的数据类型。</span>
<span class="k">typedef</span><span class="w">  </span><span class="k">struct</span><span class="w">  </span><span class="nc">_VCI_CAN_OBJ</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID</span><span class="p">;</span><span class="w">         </span><span class="c1">//报文ID。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">TimeStamp</span><span class="p">;</span><span class="w">  </span><span class="c1">//接收到信息帧时的时间标识，从CAN 控制器初始化开始计时。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">TimeFlag</span><span class="p">;</span><span class="w">   </span><span class="c1">//是否使用时间标识，为1 时TimeStamp 有效，TimeFlag 和TimeStamp 只在此帧为接收帧时有意义。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">SendType</span><span class="p">;</span><span class="w">   </span><span class="c1">//发送帧类型，=0 时为正常发送，=1 时为单次发送，=2 时为自发自收，=3 时为单次自发自收，只在此</span>
<span class="w">                                </span><span class="c1">//帧为发送帧时有意义。（当设备类型为EG20T-CAN 时，发送方式在VCI_InitCan 中通过设置，此处的</span>
<span class="w">                                </span><span class="c1">//设置无效，设置为自发自收模式后EG20T-CAN 不能从总线上接收数据，只能收到自己发出的数据）</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">RemoteFlag</span><span class="p">;</span><span class="w"> </span><span class="c1">//是否是远程帧</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">ExternFlag</span><span class="p">;</span><span class="w"> </span><span class="c1">//是否是扩展帧</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">DataLen</span><span class="p">;</span><span class="w">    </span><span class="c1">//数据长度(&lt;=8)，即Data 的长度。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Data</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span><span class="w">    </span><span class="c1">//报文的数据。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Reserved</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="c1">//系统保留。</span>
<span class="p">}</span><span class="n">VCI_CAN_OBJ</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_CAN_OBJ</span><span class="p">;</span><span class="w"></span>

<span class="c1">//3.定义CAN控制器状态的数据类型。</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_VCI_CAN_STATUS</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">ErrInterrupt</span><span class="p">;</span><span class="w">   </span><span class="c1">//中断记录，读操作会清除。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regMode</span><span class="p">;</span><span class="w">        </span><span class="c1">//CAN 控制器模式寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regStatus</span><span class="p">;</span><span class="w">      </span><span class="c1">//CAN 控制器状态寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regALCapture</span><span class="p">;</span><span class="w">   </span><span class="c1">//CAN 控制器仲裁丢失寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regECCapture</span><span class="p">;</span><span class="w">   </span><span class="c1">//CAN 控制器错误寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regEWLimit</span><span class="p">;</span><span class="w">     </span><span class="c1">//CAN 控制器错误警告限制寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regRECounter</span><span class="p">;</span><span class="w">   </span><span class="c1">//CAN 控制器接收错误寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">regTECounter</span><span class="p">;</span><span class="w">   </span><span class="c1">//CAN 控制器发送错误寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">regESR</span><span class="p">;</span><span class="w">         </span><span class="c1">//CAN 控制器错误状态寄存器。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">regTSR</span><span class="p">;</span><span class="w">         </span><span class="c1">//CAN 控制器发送状态寄存器</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">BufferSize</span><span class="p">;</span><span class="w">     </span><span class="c1">//CAN 控制器接收缓冲区大小</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">Reserved</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="n">VCI_CAN_STATUS</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_CAN_STATUS</span><span class="p">;</span><span class="w"></span>

<span class="c1">//4.定义错误信息的数据类型。</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_ERR_INFO</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ErrCode</span><span class="p">;</span><span class="w">            </span><span class="c1">//错误码</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Passive_ErrData</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="w"> </span><span class="c1">//当产生的错误中有消极错误时表示为消极错误的错误标识数据。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">ArLost_ErrData</span><span class="p">;</span><span class="w">     </span><span class="c1">//当产生的错误中有仲裁丢失错误时表示为仲裁丢失错误的错误标识数据。</span>
<span class="p">}</span><span class="w"> </span><span class="n">VCI_ERR_INFO</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_ERR_INFO</span><span class="p">;</span><span class="w"></span>

<span class="c1">//5.定义初始化CAN的数据类型</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_INIT_CONFIG</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">AccCode</span><span class="p">;</span><span class="w">    </span><span class="c1">//验收码</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">AccMask</span><span class="p">;</span><span class="w">    </span><span class="c1">//屏蔽码</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">Reserved</span><span class="p">;</span><span class="w">   </span><span class="c1">//保留</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Filter</span><span class="p">;</span><span class="w">     </span><span class="c1">//滤波方式,0-双滤波，接收所有的帧，1-单滤波，根据AccCode和AccMask来设置过滤器 </span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Timing0</span><span class="p">;</span><span class="w">    </span><span class="c1">//定时器0（BTR0）。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Timing1</span><span class="p">;</span><span class="w">    </span><span class="c1">//定时器1（BTR1）。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Mode</span><span class="p">;</span><span class="w">       </span><span class="c1">//模式，0-正常模式，1-监听模式，2-自发自收默认，若最高位设置为1，比如按位或上0x80，则表示接入120欧的终端电阻到CAN总线，否则不接入。</span>
<span class="p">}</span><span class="n">VCI_INIT_CONFIG</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_INIT_CONFIG</span><span class="p">;</span><span class="w"></span>

<span class="c1">//6.定义了CAN 滤波器的设置</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_VCI_FILTER_CONFIG</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Enable</span><span class="p">;</span><span class="w">         </span><span class="c1">//使能该过滤器，1-使能，0-禁止</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">FilterIndex</span><span class="p">;</span><span class="w">    </span><span class="c1">//过滤器索引号，取值范围为0到13</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">FilterMode</span><span class="p">;</span><span class="w">     </span><span class="c1">//过滤器模式，0-屏蔽位模式，1-标识符列表模式</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">ExtFrame</span><span class="p">;</span><span class="w">       </span><span class="c1">//过滤的帧类型标志，为1 代表要过滤的为扩展帧，为0 代表要过滤的为标准帧。</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID_Std_Ext</span><span class="p">;</span><span class="w">     </span><span class="c1">//验收码ID</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID_IDE</span><span class="p">;</span><span class="w">         </span><span class="c1">//验收码IDE</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID_RTR</span><span class="p">;</span><span class="w">         </span><span class="c1">//验收码RTR</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">MASK_Std_Ext</span><span class="p">;</span><span class="w">   </span><span class="c1">//屏蔽码ID，该项只有在过滤器模式为屏蔽位模式时有用</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">MASK_IDE</span><span class="p">;</span><span class="w">       </span><span class="c1">//屏蔽码IDE，该项只有在过滤器模式为屏蔽位模式时有用</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">MASK_RTR</span><span class="p">;</span><span class="w">       </span><span class="c1">//屏蔽码RTR，该项只有在过滤器模式为屏蔽位模式时有用</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">Reserved</span><span class="p">;</span><span class="w">       </span><span class="c1">//系统保留</span>
<span class="p">}</span><span class="w"> </span><span class="n">VCI_FILTER_CONFIG</span><span class="p">,</span><span class="o">*</span><span class="n">PVCI_FILTER_CONFIG</span><span class="p">;</span><span class="w"></span>

<span class="cp">#ifdef __cplusplus</span>
<span class="k">extern</span><span class="w"> </span><span class="s">&quot;C&quot;</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="cp">#endif</span>
<span class="cp">#ifdef __OS_ANDROID_BACK</span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ScanDevice</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">fd</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">devNum</span><span class="p">);</span><span class="w"></span>
<span class="cp">#else</span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ScanDevice</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NeedInit</span><span class="p">);</span><span class="w"></span>
<span class="cp">#endif</span>
<span class="cp">#ifdef __OS_ANDROID_BACK</span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_OpenDevice</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="o">*</span><span class="n">pFd</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">DevNum</span><span class="p">);</span><span class="w"></span>
<span class="cp">#else</span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_OpenDevice</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">Reserved</span><span class="p">);</span><span class="w"></span>
<span class="cp">#endif</span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_CloseDevice</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_InitCAN</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">PVCI_INIT_CONFIG</span><span class="w"> </span><span class="n">pInitConfig</span><span class="p">);</span><span class="w"></span>

<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ReadBoardInfo</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="n">PVCI_BOARD_INFO</span><span class="w"> </span><span class="n">pInfo</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ReadErrInfo</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="n">PVCI_ERR_INFO</span><span class="w"> </span><span class="n">pErrInfo</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ReadCANStatus</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="n">PVCI_CAN_STATUS</span><span class="w"> </span><span class="n">pCANStatus</span><span class="p">);</span><span class="w"></span>

<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_GetReference</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">RefType</span><span class="p">,</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="n">pData</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_SetReference</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">RefType</span><span class="p">,</span><span class="kt">void</span><span class="w"> </span><span class="o">*</span><span class="n">pData</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_SetFilter</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="n">PVCI_FILTER_CONFIG</span><span class="w"> </span><span class="n">pFilter</span><span class="p">);</span><span class="w"></span>

<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_GetReceiveNum</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ClearBuffer</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>

<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_StartCAN</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_ResetCAN</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>

<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_Transmit</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="n">PVCI_CAN_OBJ</span><span class="w"> </span><span class="n">pSend</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">Len</span><span class="p">);</span><span class="w"></span>
<span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">VCI_Receive</span><span class="p">(</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevType</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">DevIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="n">PVCI_CAN_OBJ</span><span class="w"> </span><span class="n">pReceive</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">Len</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">WaitTime</span><span class="o">=</span><span class="mi">-1</span><span class="p">);</span><span class="w"></span>


<span class="cp">#ifdef __cplusplus</span>
<span class="p">}</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="cp">#endif</span>
</pre></div>
</div> 
<div id="winchm_template_footer">Copyright &copy; 2018. All rights reserved.</div>
</body>
</html>
