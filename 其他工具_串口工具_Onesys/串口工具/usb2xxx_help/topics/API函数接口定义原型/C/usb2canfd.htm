
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- saved from url=(0014)about:internet -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>usb2canfd.h</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 13pt;
    font-weight: 500;
}
</style>


<meta http-equiv="X-UA-Compatible" content="IE=8">
<style>
html {
	overflow-y:scroll;
}

body {
	background-image: url(../../template1/back.png);
	background-repeat: repeat-x;
	background-color: #FFFFFF;
	padding: 0px;
	margin-top: 15px;
	margin-left: 15px;
	margin-bottom: 15px;
	margin-right: 15px;
}

#winchm_template_button {
	position: fixed; 
	float: right; 
	right: 15px; 
	top: 15px;
}

#winchm_template_navigation {
	padding: 0px;
	margin-top: 0px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	font-size: 8pt;
	font-family: Arial, Helvetica, sans-serif;
	color: #4A4A4A;
	text-align: left;
}

#winchm_template_title {
	padding: 0px;
	margin-top: 15px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	font-family: Tahoma, Geneva, sans-serif;
	font-size: 22px;
	font-weight: bold;
	color: #005680;
	text-align: left;
}

#winchm_template_content{
	padding: 0px;
	margin-top: 15px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	width: auto  !important;
	width: 100%;
}


#winchm_template_footer {
	padding: 0px;
	margin-top: 15px;
	margin-left: 0px;
	margin-bottom: 15px;
	margin-right: 0px;

	padding-top: 7px;
	border-width: 1px;
	border-color: #c0c0c0;
	border-top-style: solid;

	font-family: Arial, Helvetica, sans-serif;
	font-size: 10px;
	color: #575757;
	text-align: left;
}

@media print
{
#winchm_template_button{
visibility:hidden;
}
}

#winchm_template_navigation a:link	{text-decoration: none;color: 004080}
#winchm_template_navigation a:visited  {text-decoration: none; color: #004080}
#winchm_template_navigation a:active {text-decoration: none; color: #004080}
#winchm_template_navigation a:hover {text-decoration: none;color: #0000FF}

a:link	{text-decoration: underline; color:#0033cc}
a:visited  {text-decoration: underline; color: #0033cc}
a:active {text-decoration: underline; color: #0033cc }
a:hover {text-decoration: underline;color: #ff0000;}

</style>
</head>
<style type="text/css"> .hll { background-color: #ffffcc }</style>
<style type="text/css">  { background: #ffffff; }</style>
<style type="text/css"> .c { color: #177500 } </style>
<style type="text/css"> .err { color: #000000 } </style>
<style type="text/css"> .k { color: #A90D91 } </style>
<style type="text/css"> .l { color: #1C01CE } </style>
<style type="text/css"> .n { color: #000000 } </style>
<style type="text/css"> .o { color: #000000 } </style>
<style type="text/css"> .ch { color: #177500 } </style>
<style type="text/css"> .cm { color: #177500 } </style>
<style type="text/css"> .cp { color: #633820 } </style>
<style type="text/css"> .cpf { color: #177500 } </style>
<style type="text/css"> .c1 { color: #177500 } </style>
<style type="text/css"> .cs { color: #177500 } </style>
<style type="text/css"> .kc { color: #A90D91 } </style>
<style type="text/css"> .kd { color: #A90D91 } </style>
<style type="text/css"> .kn { color: #A90D91 } </style>
<style type="text/css"> .kp { color: #A90D91 } </style>
<style type="text/css"> .kr { color: #A90D91 } </style>
<style type="text/css"> .kt { color: #A90D91 } </style>
<style type="text/css"> .ld { color: #1C01CE } </style>
<style type="text/css"> .m { color: #1C01CE } </style>
<style type="text/css"> .s { color: #C41A16 } </style>
<style type="text/css"> .na { color: #836C28 } </style>
<style type="text/css"> .nb { color: #A90D91 } </style>
<style type="text/css"> .nc { color: #3F6E75 } </style>
<style type="text/css"> .no { color: #000000 } </style>
<style type="text/css"> .nd { color: #000000 } </style>
<style type="text/css"> .ni { color: #000000 } </style>
<style type="text/css"> .ne { color: #000000 } </style>
<style type="text/css"> .nf { color: #000000 } </style>
<style type="text/css"> .nl { color: #000000 } </style>
<style type="text/css"> .nn { color: #000000 } </style>
<style type="text/css"> .nx { color: #000000 } </style>
<style type="text/css"> .py { color: #000000 } </style>
<style type="text/css"> .nt { color: #000000 } </style>
<style type="text/css"> .nv { color: #000000 } </style>
<style type="text/css"> .ow { color: #000000 } </style>
<style type="text/css"> .mb { color: #1C01CE } </style>
<style type="text/css"> .mf { color: #1C01CE } </style>
<style type="text/css"> .mh { color: #1C01CE } </style>
<style type="text/css"> .mi { color: #1C01CE } </style>
<style type="text/css"> .mo { color: #1C01CE } </style>
<style type="text/css"> .sa { color: #C41A16 } </style>
<style type="text/css"> .sb { color: #C41A16 } </style>
<style type="text/css"> .sc { color: #2300CE } </style>
<style type="text/css"> .dl { color: #C41A16 } </style>
<style type="text/css"> .sd { color: #C41A16 } </style>
<style type="text/css"> .s2 { color: #C41A16 } </style>
<style type="text/css"> .se { color: #C41A16 } </style>
<style type="text/css"> .sh { color: #C41A16 } </style>
<style type="text/css"> .si { color: #C41A16 } </style>
<style type="text/css"> .sx { color: #C41A16 } </style>
<style type="text/css"> .sr { color: #C41A16 } </style>
<style type="text/css"> .s1 { color: #C41A16 } </style>
<style type="text/css"> .ss { color: #C41A16 } </style>
<style type="text/css"> .bp { color: #5B269A } </style>
<style type="text/css"> .fm { color: #000000 } </style>
<style type="text/css"> .vc { color: #000000 } </style>
<style type="text/css"> .vg { color: #000000 } </style>
<style type="text/css"> .vi { color: #000000 } </style>
<style type="text/css"> .vm { color: #000000 } </style>
<style type="text/css"> .il { color: #1C01CE } </style>
<body><script language="JavaScript" type="text/JavaScript">
function syn(){
if(parent.nav.tree){
 if(parent.nav.tree.loaded){
  parent.nav.tree.selectNode(89);
 }else{
  setTimeout("syn()",500);
}
  }else{
  setTimeout("syn()",500);
  }}
if(parent!=self){
  setTimeout("syn()",100);
}else{
  parent.location.href = "../../../index.htm?page=API函数接口定义原型/C/usb2canfd.htm";
}
originalOnload = window.onload;
if(originalOnload==null){
window.onload = function(){parent.contentLoaded = true;};
}else{
window.onload = function(){originalOnload();parent.contentLoaded = true;};
}
</script> 

<div id="winchm_template_button"><A href="usb2can.htm" title="Previous topic"><img id="winchm_template_prev" alt="Previous topic" src="../../template1/btn_prev_n.gif" border="0"></a><A href="usb2cnt.htm" title="Next topic"><img id="winchm_template_next" alt="Next topic" src="../../template1/btn_next_n.gif" border="0"></a></div>
<div id="winchm_template_navigation">Help &gt; 
<A href="../函数原型.htm">函数原型</A> &gt; </div>
<div id="winchm_template_title">usb2canfd.h</div>
<div id="winchm_template_content">
<div class="highlight"><pre><span></span><span class="cm">/**</span>
<span class="cm">  ******************************************************************************</span>
<span class="cm">  * @file    usb2canfd.h</span>
<span class="cm">  * $Author: wdluo $</span>
<span class="cm">  * $Revision: 447 $</span>
<span class="cm">  * $Date:: 2013-06-29 18:24:57 +0800 #$</span>
<span class="cm">  * @brief   usb2canfd相关函数和数据类型定义.</span>
<span class="cm">  ******************************************************************************</span>
<span class="cm">  * @attention</span>
<span class="cm">  *</span>
<span class="cm">  *&lt;center&gt;&lt;a href=&quot;http:\\www.toomoss.com&quot;&gt;http://www.toomoss.com&lt;/a&gt;&lt;/center&gt;</span>
<span class="cm">  *&lt;center&gt;All Rights Reserved&lt;/center&gt;&lt;/h3&gt;</span>
<span class="cm">  * </span>
<span class="cm">  ******************************************************************************</span>
<span class="cm">  */</span><span class="w"></span>
<span class="cp">#ifndef __USB2CANFD_H_</span>
<span class="cp">#define __USB2CANFD_H_</span>

<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;stdint.h&gt;</span><span class="cp"></span>
<span class="cp">#ifndef OS_UNIX</span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;Windows.h&gt;</span><span class="cp"></span>
<span class="cp">#else</span>
<span class="cp">#include</span><span class="w"> </span><span class="cpf">&lt;unistd.h&gt;</span><span class="cp"></span>
<span class="cp">#ifndef WINAPI</span>
<span class="cp">#define WINAPI</span>
<span class="cp">#endif</span>
<span class="cp">#endif</span>
<span class="c1">//函数返回值错误信息定义</span>
<span class="cp">#define CANFD_SUCCESS             (0)   </span><span class="c1">//函数执行成功</span>
<span class="cp">#define CANFD_ERR_NOT_SUPPORT     (-1)  </span><span class="c1">//适配器不支持该函数</span>
<span class="cp">#define CANFD_ERR_USB_WRITE_FAIL  (-2)  </span><span class="c1">//USB写数据失败</span>
<span class="cp">#define CANFD_ERR_USB_READ_FAIL   (-3)  </span><span class="c1">//USB读数据失败</span>
<span class="cp">#define CANFD_ERR_CMD_FAIL        (-4)  </span><span class="c1">//命令执行失败</span>
<span class="c1">//CANFD_MSG.ID定义</span>
<span class="cp">#define CANFD_MSG_FLAG_RTR      (0x40000000)</span>
<span class="cp">#define CANFD_MSG_FLAG_IDE      (0x80000000)</span>
<span class="cp">#define CANFD_MSG_FLAG_ID_MASK  (0x1FFFFFFF)</span>
<span class="c1">//CANFD_MSG.Flags定义</span>
<span class="cp">#define CANFD_MSG_FLAG_BRS      (0x01)  </span><span class="c1">//CANFD加速帧标志</span>
<span class="cp">#define CANFD_MSG_FLAG_ESI      (0x02)</span>
<span class="cp">#define CANFD_MSG_FLAG_FDF      (0x04)  </span><span class="c1">//CANFD帧标志</span>
<span class="cp">#define CANFD_MSG_FLAG_TXD      (0x80)</span>
<span class="c1">//CANFD_DIAGNOSTIC.Flags定义</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_NBIT0_ERR     (0x0001)</span><span class="c1">//在发送报文（或应答位、主动错误标志或过载标志）期间，器件要发送显性电平（逻辑值为0的数据或标识符位），但监视的总线值为隐性。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_NBIT1_ERR     (0x0002)</span><span class="c1">//在发送报文（仲裁字段除外）期间，器件要发送隐性电平（逻辑值为1的位），但监视到的总线值为显性。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_NACK_ERR      (0x0004)</span><span class="c1">//发送报文未应答。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_NFORM_ERR     (0x0008)</span><span class="c1">//接收报文的固定格式部分格式错误。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_NSTUFF_ERR    (0x0010)</span><span class="c1">//在接收报文的一部分中，序列中包含了5个以上相等位，而报文中不允许出现这种序列。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_NCRC_ERR      (0x0020)</span><span class="c1">//接收的报文的CRC校验和不正确。输入报文的CRC与通过接收到的数据计算得到的CRC不匹配。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_TXBO_ERR      (0x0080)</span><span class="c1">//器件进入离线状态（且自动恢复）。</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_DBIT0_ERR     (0x0100)</span><span class="c1">//见NBIT0_ERR</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_DBIT1_ERR     (0x0200)</span><span class="c1">//见NBIT1_ERR</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_DFORM_ERR     (0x0800)</span><span class="c1">//见NFORM_ERR</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_DSTUFF_ERR    (0x1000)</span><span class="c1">//见NSTUFF_ERR</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_DCRC_ERR      (0x2000)</span><span class="c1">//见NCRC_ERR</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_ESI_ERR       (0x4000)</span><span class="c1">//接收的CAN FD报文的ESI标志置1</span>
<span class="cp">#define CANFD_DIAGNOSTIC_FLAG_DLC_MISMATCH  (0x8000)</span><span class="c1">//DLC不匹配,在发送或接收期间，指定的DLC大于FIFO元素的PLSIZE</span>
<span class="c1">//CANFD_BUS_ERROR.Flags定义</span>
<span class="cp">#define CANFD_BUS_ERROR_FLAG_TX_RX_WARNING   (0x01)</span>
<span class="cp">#define CANFD_BUS_ERROR_FLAG_RX_WARNING      (0x02)</span>
<span class="cp">#define CANFD_BUS_ERROR_FLAG_TX_WARNING      (0x04)</span>
<span class="cp">#define CANFD_BUS_ERROR_FLAG_RX_BUS_PASSIVE  (0x08)</span>
<span class="cp">#define CANFD_BUS_ERROR_FLAG_TX_BUS_PASSIVE  (0x10)</span>
<span class="cp">#define CANFD_BUS_ERROR_FLAG_TX_BUS_OFF      (0x20)</span>
<span class="c1">//1.CANFD信息帧的数据类型定义</span>
<span class="k">typedef</span><span class="w">  </span><span class="k">struct</span><span class="w">  </span><span class="nc">_CANFD_MSG</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID</span><span class="p">;</span><span class="w">           </span><span class="c1">//报文ID,bit[30]-RTR,bit[31]-IDE,bit[28..0]-ID</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">DLC</span><span class="p">;</span><span class="w">          </span><span class="c1">//数据字节长度，可设置为-0,1,2,3,4,5,6,7,8,12,16,20,24,32,48,64</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Flags</span><span class="p">;</span><span class="w">        </span><span class="c1">//bit[0]-BRS,bit[1]-ESI,bit[2]-FDF,bit[6..5]-Channel,bit[7]-RXD</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">__Res0</span><span class="p">;</span><span class="w">       </span><span class="c1">//保留</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">TimeStampHigh</span><span class="p">;</span><span class="c1">//时间戳高位</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">TimeStamp</span><span class="p">;</span><span class="w">    </span><span class="c1">//帧接收或者发送时的时间戳，单位为10us</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Data</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span><span class="w">     </span><span class="c1">//报文的数据。</span>
<span class="p">}</span><span class="n">CANFD_MSG</span><span class="p">;</span><span class="w"></span>

<span class="c1">//2.CANFD初始化配置数据类型定义</span>
<span class="k">typedef</span><span class="w">  </span><span class="k">struct</span><span class="w">  </span><span class="nc">_CANFD_INIT_CONFIG</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">Mode</span><span class="p">;</span><span class="w"> </span><span class="c1">//0-正常模式，1-自发自收模式</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">ISOCRCEnable</span><span class="p">;</span><span class="c1">//0-禁止ISO CRC,1-使能ISO CRC</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">RetrySend</span><span class="p">;</span><span class="c1">//0-禁止重发，1-无限制重发</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">ResEnable</span><span class="p">;</span><span class="c1">//0-不接入内部120欧终端电阻，1-接入内部120欧终端电阻</span>
<span class="w">    </span><span class="c1">//波特率参数可以用TCANLINPro软件里面的波特率计算工具计算</span>
<span class="w">    </span><span class="c1">//仲裁段波特率参数,波特率=40M/NBT_BRP*(1+NBT_SEG1+NBT_SEG2)</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NBT_BRP</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NBT_SEG1</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NBT_SEG2</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NBT_SJW</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="c1">//数据段波特率参数,波特率=40M/DBT_BRP*(1+DBT_SEG1+DBT_SEG2)</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">DBT_BRP</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">DBT_SEG1</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">DBT_SEG2</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">DBT_SJW</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">__Res0</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span><span class="w"></span>
<span class="p">}</span><span class="n">CANFD_INIT_CONFIG</span><span class="p">;</span><span class="w"></span>
<span class="c1">//3.CANFD诊断帧信息结构体定义</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_CANFD_DIAGNOSTIC</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NREC</span><span class="p">;</span><span class="c1">//标称比特率接收错误计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">NTEC</span><span class="p">;</span><span class="c1">//标称比特率发送错误计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">DREC</span><span class="p">;</span><span class="c1">//数据比特率接收错误计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">DTEC</span><span class="p">;</span><span class="c1">//数据比特率发送错误计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w"> </span><span class="n">ErrorFreeMsgCount</span><span class="p">;</span><span class="c1">//无错误帧计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w"> </span><span class="n">Flags</span><span class="p">;</span><span class="c1">//参考诊断标志定义</span>
<span class="p">}</span><span class="n">CANFD_DIAGNOSTIC</span><span class="p">;</span><span class="w"></span>
<span class="c1">//4.CANFD总线错误信息结构体定义</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_CANFD_BUS_ERROR</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">TEC</span><span class="p">;</span><span class="c1">//发送错误计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">REC</span><span class="p">;</span><span class="c1">//接收错误计数</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">Flags</span><span class="p">;</span><span class="c1">//参考总线错误标志定义</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">__Res0</span><span class="p">;</span><span class="w"></span>
<span class="p">}</span><span class="n">CANFD_BUS_ERROR</span><span class="p">;</span><span class="w"></span>
<span class="c1">//5.CAN 滤波器设置数据类型定义</span>
<span class="k">typedef</span><span class="w"> </span><span class="k">struct</span><span class="w"> </span><span class="nc">_CANFD_FILTER_CONFIG</span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Enable</span><span class="p">;</span><span class="w">   </span><span class="c1">//使能该过滤器，1-使能，0-禁止</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w">   </span><span class="n">Index</span><span class="p">;</span><span class="w">    </span><span class="c1">//过滤器索引号，取值范围为0到31</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">__Res0</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">__Res1</span><span class="p">;</span><span class="w"></span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID_Accept</span><span class="p">;</span><span class="c1">//验收码ID,bit[28..0]为有效ID位，bit[31]为IDE</span>
<span class="w">    </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w">    </span><span class="n">ID_Mask</span><span class="p">;</span><span class="w">  </span><span class="c1">//屏蔽码，对应bit位若为1，则需要对比对应验收码bit位，相同才接收</span>
<span class="p">}</span><span class="n">CANFD_FILTER_CONFIG</span><span class="p">;</span><span class="w"></span>

<span class="cp">#ifdef __cplusplus</span>
<span class="k">extern</span><span class="w"> </span><span class="s">&quot;C&quot;</span><span class="w"></span>
<span class="p">{</span><span class="w"></span>
<span class="cp">#endif</span>

<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_Init</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_INIT_CONFIG</span><span class="w"> </span><span class="o">*</span><span class="n">pCanConfig</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_StartGetMsg</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_StopGetMsg</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_SendMsg</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_MSG</span><span class="w"> </span><span class="o">*</span><span class="n">pCanSendMsg</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">SendMsgNum</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_GetMsg</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_MSG</span><span class="w"> </span><span class="o">*</span><span class="n">pCanGetMsg</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">BufferSize</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_ClearMsg</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_SetFilter</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_FILTER_CONFIG</span><span class="w"> </span><span class="o">*</span><span class="n">pCanFilter</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">Len</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_GetDiagnostic</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_DIAGNOSTIC</span><span class="w"> </span><span class="o">*</span><span class="n">pCanDiagnostic</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_GetBusError</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_BUS_ERROR</span><span class="w"> </span><span class="o">*</span><span class="n">pCanBusError</span><span class="p">);</span><span class="w"></span>

<span class="cm">/**</span>
<span class="cm">  * @brief  设置CAN调度表数据</span>
<span class="cm">  * @param  DevHandle 设备索引号</span>
<span class="cm">  * @param  CANIndex CAN通道号，取值0或者1</span>
<span class="cm">  * @param  pCanMsgTab CAN调度表列表首地址</span>
<span class="cm">  * @param  pMsgNum 调度表列表中每个调度表包含消息帧数</span>
<span class="cm">  * @param  pSendTimes 每个调度表里面帧发送次数，若为0xFFFF，则循环发送，通过调用CAN_StopSchedule函数停止调用</span>
<span class="cm">  * @param  MsgTabNum 调度表数</span>
<span class="cm">  * @retval 函数执行状态，小于0函数执行出错</span>
<span class="cm">  */</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_SetSchedule</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="n">CANFD_MSG</span><span class="w"> </span><span class="o">*</span><span class="n">pCanMsgTab</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="o">*</span><span class="n">pMsgNum</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">short</span><span class="w"> </span><span class="o">*</span><span class="n">pSendTimes</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">MsgTabNum</span><span class="p">);</span><span class="w"></span>
<span class="cm">/**</span>
<span class="cm">  * @brief  启动调度表</span>
<span class="cm">  * @param  DevHandle 设备索引号</span>
<span class="cm">  * @param  CANIndex CAN通道号，取值0或者1</span>
<span class="cm">  * @param  MsgTabIndex CAN调度表索引号</span>
<span class="cm">  * @param  TimePrecMs 调度表时间精度，比如调度表里面最小帧周期为10ms，那么就建议设置为10</span>
<span class="cm">  * @param  OrderSend 设置为1则顺序发送调度表里面的帧，设置为0则并行发送调度表里面的帧 </span>
<span class="cm">  * @retval 函数执行状态，小于0函数执行出错</span>
<span class="cm">  */</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_StartSchedule</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">MsgTabIndex</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">TimePrecMs</span><span class="p">,</span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">OrderSend</span><span class="p">);</span><span class="w"></span>
<span class="cm">/**</span>
<span class="cm">  * @brief  停止调度方式发送数据</span>
<span class="cm">  * @param  DevHandle 设备索引号</span>
<span class="cm">  * @param  CANIndex CAN通道号，取值0或者1</span>
<span class="cm">  * @param  MsgTabIndex CAN调度表索引号</span>
<span class="cm">  * @retval 函数执行状态，小于0函数执行出错</span>
<span class="cm">  */</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_StopSchedule</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">CANIndex</span><span class="p">);</span><span class="w"></span>

<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_SetRelay</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="kt">unsigned</span><span class="w"> </span><span class="kt">char</span><span class="w"> </span><span class="n">RelayState</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_SetRelayData</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="n">CAN_RELAY_HEAD</span><span class="w"> </span><span class="o">*</span><span class="n">pCANRelayHead</span><span class="p">,</span><span class="w"> </span><span class="n">CAN_RELAY_DATA</span><span class="w"> </span><span class="o">*</span><span class="n">pCANRelayData</span><span class="p">);</span><span class="w"></span>
<span class="kt">int</span><span class="w"> </span><span class="n">WINAPI</span><span class="w"> </span><span class="nf">CANFD_GetRelayData</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">DevHandle</span><span class="p">,</span><span class="w"> </span><span class="n">CAN_RELAY_HEAD</span><span class="w"> </span><span class="o">*</span><span class="n">pCANRelayHead</span><span class="p">,</span><span class="w"> </span><span class="n">CAN_RELAY_DATA</span><span class="w"> </span><span class="o">*</span><span class="n">pCANRelayData</span><span class="p">);</span><span class="w"></span>

<span class="cp">#ifdef __cplusplus</span>
<span class="p">}</span><span class="w"></span>
<span class="cp">#endif</span>
<span class="cp">#endif</span>
</pre></div>
</div> 
<div id="winchm_template_footer">Copyright &copy; 2018. All rights reserved.</div>
</body>
</html>
